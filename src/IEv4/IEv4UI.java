/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package IEv4;

import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;
import org.bytedeco.javacpp.opencv_core.Mat;
import org.bytedeco.javacpp.opencv_core.Size;
import org.bytedeco.javacpp.opencv_imgcodecs;
import org.bytedeco.javacv.FFmpegFrameGrabber;
import org.bytedeco.javacv.Frame;
import org.bytedeco.javacv.FrameGrabber;
import org.bytedeco.javacv.Java2DFrameUtils;
import static org.bytedeco.javacpp.opencv_imgproc.resize;

/**
 *
 * @author Leonardo
 */
public class IEv4UI extends javax.swing.JFrame {
    public static int _change = 500,_locality= 1, _gridWidth, _gridHeight, _gridX, _gridY, _width, _height, _numFrames, _numFramesSearch, _growthBD = 10, _gridHalfWidth, _gridHalfHeight, _ExWidth, _ExHeigth, _numFramesSel;
    public static float _minTolerance = 30, _minLocalTolerance = 40;
    public static int _deltaTolerance;
    public static double _aspectRatio;
    public static FFmpegFrameGrabber _grabber;
    public static boolean _euclidianComp, _framesHD, _desperate;
    public static Mat _mosaic, _frame;
    public static Frame _frameSelect,_frameSelectSearch;
    public DB db;
    /**
    
    /**
     * Creates new form IEv4UI
     */
    public IEv4UI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        containerOptions = new javax.swing.JTabbedPane();
        selectFrame = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        ExploreVideo = new javax.swing.JSlider();
        Select = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        GridX = new javax.swing.JTextField();
        GridY = new javax.swing.JTextField();
        Width = new javax.swing.JTextField();
        Height = new javax.swing.JTextField();
        Change = new javax.swing.JTextField();
        LTolerance = new javax.swing.JTextField();
        Tolerance = new javax.swing.JTextField();
        LabelTolerance = new javax.swing.JLabel();
        LabelLTolerance = new javax.swing.JLabel();
        LabelChange = new javax.swing.JLabel();
        LabelChange1 = new javax.swing.JLabel();
        Locality = new javax.swing.JTextField();
        explorerBD = new javax.swing.JPanel();
        BDExplorer = new javax.swing.JSlider();
        Pixel = new javax.swing.JCheckBox();
        HD = new javax.swing.JCheckBox();
        ViewPhoto = new javax.swing.JButton();
        ContainerImage = new javax.swing.JScrollPane();
        ImagePrint = new javax.swing.JLabel();
        ContainerSelected = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        ImageSelect = new javax.swing.JLabel();
        SavePhotoMosaic = new javax.swing.JButton();
        LoadVideo = new javax.swing.JButton();
        ShowPhotoMosaic = new javax.swing.JButton();
        EuclideanDistance = new javax.swing.JCheckBox();
        Msg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(142, 174, 189));
        jPanel1.setToolTipText("");

        containerOptions.setFocusable(false);

        selectFrame.setBackground(new java.awt.Color(48, 65, 82));
        selectFrame.setFocusable(false);

        ExploreVideo.setBackground(new java.awt.Color(48, 65, 82));
        ExploreVideo.setMaximum(200);
        ExploreVideo.setValue(100);
        ExploreVideo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ExploreVideoMouseReleased(evt);
            }
        });

        Select.setText("Seleccionar");
        Select.setOpaque(false);
        Select.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Select Grid Image Out:");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Grid X :");

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Grid Y :");

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Width :");

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Height :");

        GridX.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        GridX.setText("1");
        GridX.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                GridXKeyReleased(evt);
            }
        });

        GridY.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        GridY.setText("1");
        GridY.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                GridYKeyReleased(evt);
            }
        });

        Width.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Width.setText("0");
        Width.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                WidthKeyReleased(evt);
            }
        });

        Height.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Height.setText("0");
        Height.setEnabled(false);

        Change.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Change.setText("500");
        Change.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangeActionPerformed(evt);
            }
        });
        Change.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ChangeKeyReleased(evt);
            }
        });

        LTolerance.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        LTolerance.setText("40");
        LTolerance.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                LToleranceKeyReleased(evt);
            }
        });

        Tolerance.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Tolerance.setText("30");
        Tolerance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ToleranceActionPerformed(evt);
            }
        });
        Tolerance.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ToleranceKeyReleased(evt);
            }
        });

        LabelTolerance.setForeground(new java.awt.Color(255, 255, 255));
        LabelTolerance.setText("Tolerance");

        LabelLTolerance.setForeground(new java.awt.Color(255, 255, 255));
        LabelLTolerance.setText("LTolerance");

        LabelChange.setForeground(new java.awt.Color(255, 255, 255));
        LabelChange.setText("Change");

        LabelChange1.setForeground(new java.awt.Color(255, 255, 255));
        LabelChange1.setText("Locality");

        Locality.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Locality.setText("2");
        Locality.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LocalityActionPerformed(evt);
            }
        });
        Locality.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                LocalityKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout selectFrameLayout = new javax.swing.GroupLayout(selectFrame);
        selectFrame.setLayout(selectFrameLayout);
        selectFrameLayout.setHorizontalGroup(
            selectFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectFrameLayout.createSequentialGroup()
                .addGroup(selectFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(selectFrameLayout.createSequentialGroup()
                        .addGroup(selectFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(selectFrameLayout.createSequentialGroup()
                                .addGap(105, 105, 105)
                                .addComponent(Select))
                            .addGroup(selectFrameLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel4)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(selectFrameLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(selectFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ExploreVideo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator1)
                            .addGroup(selectFrameLayout.createSequentialGroup()
                                .addGroup(selectFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel7))
                                .addGap(18, 18, 18)
                                .addGroup(selectFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Height, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Width, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, selectFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(GridX, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(GridY, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(selectFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(selectFrameLayout.createSequentialGroup()
                                        .addGroup(selectFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(LabelLTolerance)
                                            .addComponent(LabelTolerance)
                                            .addComponent(LabelChange))
                                        .addGap(18, 18, 18)
                                        .addGroup(selectFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Change, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, selectFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(Tolerance, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(LTolerance, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(selectFrameLayout.createSequentialGroup()
                                        .addComponent(LabelChange1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(Locality, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 5, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        selectFrameLayout.setVerticalGroup(
            selectFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(selectFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(selectFrameLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addGap(14, 14, 14)
                        .addComponent(jLabel6)
                        .addGap(14, 14, 14)
                        .addComponent(jLabel7)
                        .addGap(14, 14, 14)
                        .addComponent(jLabel8))
                    .addGroup(selectFrameLayout.createSequentialGroup()
                        .addGroup(selectFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(selectFrameLayout.createSequentialGroup()
                                .addComponent(GridX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(GridY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Width, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(selectFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(selectFrameLayout.createSequentialGroup()
                                    .addComponent(LabelTolerance)
                                    .addGap(14, 14, 14)
                                    .addComponent(LabelLTolerance)
                                    .addGap(14, 14, 14)
                                    .addComponent(LabelChange))
                                .addGroup(selectFrameLayout.createSequentialGroup()
                                    .addComponent(Tolerance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(LTolerance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(Change, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(selectFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Height, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelChange1)))
                    .addComponent(Locality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ExploreVideo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Select)
                .addContainerGap())
        );

        containerOptions.addTab("Select Frame", null, selectFrame, "");

        explorerBD.setBackground(new java.awt.Color(48, 65, 82));

        BDExplorer.setValue(0);
        BDExplorer.setEnabled(false);
        BDExplorer.setOpaque(false);
        BDExplorer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BDExplorerMouseReleased(evt);
            }
        });

        Pixel.setForeground(new java.awt.Color(255, 255, 255));
        Pixel.setText("Pixel");
        Pixel.setEnabled(false);
        Pixel.setOpaque(false);
        Pixel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PixelActionPerformed(evt);
            }
        });

        HD.setForeground(new java.awt.Color(255, 255, 255));
        HD.setText("Image HD");
        HD.setEnabled(false);
        HD.setOpaque(false);
        HD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HDActionPerformed(evt);
            }
        });

        ViewPhoto.setText("View Photo-Mosaic");
        ViewPhoto.setEnabled(false);
        ViewPhoto.setOpaque(false);
        ViewPhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewPhotoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout explorerBDLayout = new javax.swing.GroupLayout(explorerBD);
        explorerBD.setLayout(explorerBDLayout);
        explorerBDLayout.setHorizontalGroup(
            explorerBDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(explorerBDLayout.createSequentialGroup()
                .addGroup(explorerBDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(explorerBDLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BDExplorer, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(explorerBDLayout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(Pixel)
                        .addGap(40, 40, 40)
                        .addComponent(HD))
                    .addGroup(explorerBDLayout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(ViewPhoto)))
                .addContainerGap())
        );
        explorerBDLayout.setVerticalGroup(
            explorerBDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(explorerBDLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(explorerBDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Pixel)
                    .addComponent(HD))
                .addGap(18, 18, 18)
                .addComponent(BDExplorer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ViewPhoto)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        containerOptions.addTab("Explore BD", null, explorerBD, "");

        ImagePrint.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ContainerImage.setViewportView(ImagePrint);

        ContainerSelected.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        ImageSelect.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jScrollPane2.setViewportView(ImageSelect);

        ContainerSelected.addTab("Image Selected", jScrollPane2);

        SavePhotoMosaic.setText("Save");
        SavePhotoMosaic.setActionCommand("Sa");
        SavePhotoMosaic.setFocusable(false);
        SavePhotoMosaic.setOpaque(false);
        SavePhotoMosaic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SavePhotoMosaicActionPerformed(evt);
            }
        });

        LoadVideo.setText("Load");
        LoadVideo.setFocusable(false);
        LoadVideo.setOpaque(false);
        LoadVideo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadVideoActionPerformed(evt);
            }
        });

        ShowPhotoMosaic.setText("Generate Photo-Mosaic");
        ShowPhotoMosaic.setEnabled(false);
        ShowPhotoMosaic.setFocusable(false);
        ShowPhotoMosaic.setOpaque(false);
        ShowPhotoMosaic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowPhotoMosaicActionPerformed(evt);
            }
        });

        EuclideanDistance.setForeground(new java.awt.Color(255, 255, 255));
        EuclideanDistance.setText("Euclidean Distance");
        EuclideanDistance.setEnabled(false);
        EuclideanDistance.setOpaque(false);
        EuclideanDistance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EuclideanDistanceActionPerformed(evt);
            }
        });

        Msg.setForeground(new java.awt.Color(255, 255, 255));
        Msg.setText("Mensaje");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(containerOptions)
                    .addComponent(ContainerSelected, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(ContainerImage, javax.swing.GroupLayout.PREFERRED_SIZE, 639, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(ShowPhotoMosaic)
                                .addGap(18, 18, 18)
                                .addComponent(EuclideanDistance))
                            .addComponent(Msg, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(LoadVideo)
                        .addGap(18, 18, 18)
                        .addComponent(SavePhotoMosaic)))
                .addGap(27, 27, 27))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LoadVideo)
                            .addComponent(SavePhotoMosaic))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(containerOptions, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(26, 26, 26)
                            .addComponent(ContainerSelected, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ContainerImage, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ShowPhotoMosaic)
                            .addComponent(EuclideanDistance))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Msg, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static int calculateHeight(int x){
        return  (int) (x/_aspectRatio);
    }
    
    public static double calculateAspectRatio(int x, int y){
        return (double) x/y;
    }
    
    public static Mat resize (Mat a,int x){
        Mat Out = new Mat(a.size());
        org.bytedeco.javacpp.opencv_imgproc.resize(a, Out, new Size(x,calculateHeight(x)) );
        return Out;
    }
    
    //display imagen en la zona grande
    public static void display(Frame a){
        ImagePrint.setIcon(new ImageIcon (Java2DFrameUtils.toBufferedImage(resize(Java2DFrameUtils.toMat(a),636) )));
    }
    
    public static void display(Mat a){
        ImagePrint.setIcon(new ImageIcon (Java2DFrameUtils.toBufferedImage(resize(a,636) )));
    }
    
    
    //imagen chiquita vista previa
    public static void display_mat_select(Mat a){
        ImageSelect.setIcon(new ImageIcon (Java2DFrameUtils.toBufferedImage(resize(a,310) )));
    }
    
    public void UpdateData(){
        try {
            _locality = Integer.parseInt(Locality.getText());
            _minLocalTolerance = Integer.parseInt(LTolerance.getText());
            _minTolerance = Integer.parseInt(Tolerance.getText());
            _change = Integer.parseInt(Change.getText());
            _numFrames = _grabber.getLengthInVideoFrames()-1; 
            _width = _grabber.getImageWidth();
            _height = _grabber.getImageHeight();
            _aspectRatio = calculateAspectRatio(_width, _height);
            _gridX = Integer.parseInt(GridX.getText());        
            _gridY = Integer.parseInt(GridY.getText());
            _gridWidth = _width / _gridX;
            _gridHeight = _height / _gridY; 
            _gridHalfWidth = (int) _gridWidth/2;
            _gridHalfHeight = (int) _gridHeight/2;
            _ExHeigth = _gridHeight;
            _ExWidth = _gridWidth;
            _deltaTolerance = (int)_minTolerance/4;
        } catch (Exception e) {
            System.out.println(e.getMessage()+"   En update data");
        }

    }
    
    private void LoadVideoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadVideoActionPerformed
        JFileChooser fChooser = new JFileChooser(FileSystemView.getFileSystemView().getDefaultDirectory());
        fChooser.setFileFilter(new FileNameExtensionFilter("mp4", "mp4"));        
        fChooser.setFileFilter(new FileNameExtensionFilter("mkv", "mkv"));
        fChooser.setFileFilter(new FileNameExtensionFilter("avi", "avi"));
        if (fChooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            File fSelected = fChooser.getSelectedFile();
            _grabber = new FFmpegFrameGrabber(fSelected.getAbsolutePath());
            try {
                _grabber.start();
                UpdateData();
                _numFramesSel = (int)(Math.random() * _numFrames);
                
                
                _grabber.setVideoFrameNumber(_numFramesSel);
                _frameSelect = _grabber.grab();

                Width.setText(Integer.toString(_width));
                Height.setText(Integer.toString(_height));
                ExploreVideo.setMaximum(_numFrames);
                ExploreVideo.setValue(_numFramesSel);

                display(_frameSelect);
            } catch (FrameGrabber.Exception ex) {
                Logger.getLogger(IEv4UI.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_LoadVideoActionPerformed

    private void SavePhotoMosaicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SavePhotoMosaicActionPerformed
        JFileChooser fChooser = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        fChooser.setFileFilter(new FileNameExtensionFilter("bmp", "bmp"));        
        fChooser.setFileFilter(new FileNameExtensionFilter("png", "png"));
        fChooser.setFileFilter(new FileNameExtensionFilter("jpg", "jpg"));
        if( fChooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION){
            File fSelected = fChooser.getSelectedFile();      
            String name = fSelected.getAbsolutePath();
            if(!name.endsWith(".jpg") || !name.endsWith(".bmp") || !name.endsWith(".png")){
                name = name + "." + fChooser.getFileFilter().getDescription();
            }
            //Guardar imagen
            opencv_imgcodecs.imwrite(name,_mosaic);
        }
    }//GEN-LAST:event_SavePhotoMosaicActionPerformed

    private void ExploreVideoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExploreVideoMouseReleased
        int a ;
        try {
            a= ExploreVideo.getValue();
            _numFramesSel=a;
            _grabber.setVideoFrameNumber(_numFramesSel);
            _frameSelect=_grabber.grab();
            display(_frameSelect);
        } catch (FrameGrabber.Exception ex) {
            Logger.getLogger(IEv4UI.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_ExploreVideoMouseReleased

    private void GridXKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GridXKeyReleased
       String a;
       try{
            a=GridX.getText();
            _gridX=Integer.parseInt(a);
            _gridY=_gridX;
            GridY.setText(a);
            int size = _gridX * _gridX;
            while(size > _numFrames){
                _gridX--;
                size = _gridX * _gridX;
            };
            
            try
           {
              while() 
           } catch (Exception e)
           {
           }
            
            
            
            
            _gridY = _gridX;
            GridX.setText(String.valueOf(_gridX));
            GridY.setText(String.valueOf(_gridY));

            Change.setText(String.valueOf(_gridY * _gridX));

       }catch(NumberFormatException e){
       }
    }//GEN-LAST:event_GridXKeyReleased

    private void GridYKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GridYKeyReleased
        String a;
        try{
             a=GridY.getText();
             _gridY=Integer.parseInt(a);
             _gridX=_gridY;
             GridX.setText(a);
             Change.setText(String.valueOf(_gridY * _gridX));
        }catch(NumberFormatException e){     
        }
    }//GEN-LAST:event_GridYKeyReleased

    private void WidthKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_WidthKeyReleased
        try{
            _width = Integer.parseInt(Width.getText());
            _height = calculateHeight(_width);
            Height.setText(Integer.toString(_height));
        }catch(NumberFormatException e){
        }
    }//GEN-LAST:event_WidthKeyReleased

    private void SelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectActionPerformed
        try{
            db = null;
            UpdateData();
            _frame = Java2DFrameUtils.toMat(_frameSelect);
            display_mat_select(_frame);
            ShowPhotoMosaic.setEnabled(true);
            EuclideanDistance.setEnabled(true);   
        }catch(Exception e){
        }
    }//GEN-LAST:event_SelectActionPerformed

    private void EuclideanDistanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EuclideanDistanceActionPerformed
        _euclidianComp = EuclideanDistance.isSelected();
    }//GEN-LAST:event_EuclideanDistanceActionPerformed

    private void PixelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PixelActionPerformed
        if(Pixel.isSelected()){
            if(_framesHD){
                HD.setSelected(false);
                _framesHD=false;   
            }else{
                BDExplorer.setMaximum(0);//cambiar cero por tamaño de la base de datos
                BDExplorer.setEnabled(true);
                ViewPhoto.setEnabled(true);
            }
        }else{
            if(!_framesHD){
                BDExplorer.setEnabled(false);
                ViewPhoto.setEnabled(false);
                display(_mosaic); // en mosaic se guarda la imagen modificada
            }
        }
    }//GEN-LAST:event_PixelActionPerformed

    private void HDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HDActionPerformed
        if(HD.isSelected()){
            if(Pixel.isSelected()){
                Pixel.setSelected(false);
                _framesHD = true;
            }else{
                _framesHD = true;
                BDExplorer.setMaximum(0);//cambiar cero por tamaño de la base de datos
                BDExplorer.setEnabled(true);
                ViewPhoto.setEnabled(true);   
            }
        }else{
            if(!Pixel.isSelected()){
                BDExplorer.setEnabled(false);
                ViewPhoto.setEnabled(false);
                display(_mosaic); // en mosaic se guarda la imagen modificada
            }
        }
    }//GEN-LAST:event_HDActionPerformed

    private void ShowPhotoMosaicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowPhotoMosaicActionPerformed
        Pixel.setEnabled(true);
        HD.setEnabled(true);
        
        UpdateData();
        db = new DB(resize(_frame, _width));
        _mosaic = db.GenerateMosaic();// generar mosaico y guardarlo en _mosaic
        display(_mosaic);
        ShowPhotoMosaic.setEnabled(false);
    }//GEN-LAST:event_ShowPhotoMosaicActionPerformed

    private void BDExplorerMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BDExplorerMouseReleased
        int a;
        a = BDExplorer.getValue();//posicion en la bd
        if(_framesHD){
            //obtener numero de frame
            // algo asi ---> _numFramesSel=a;
            _numFramesSearch=300; // cableado mientras se busca en la bd cambiar
            try {
                _grabber.setVideoFrameNumber(_numFramesSearch);
                _frameSelectSearch=_grabber.grab();
                display(_frameSelectSearch);
            } catch (FrameGrabber.Exception ex) {
                Logger.getLogger(IEv4UI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            Mat aux = null;
            //obtener imagen miniatura de la bd pixelada aux = imagen de la bd
            display(aux);
        }
    }//GEN-LAST:event_BDExplorerMouseReleased

    private void ViewPhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewPhotoActionPerformed
        HD.setEnabled(false);
        Pixel.setEnabled(false);
        _framesHD=false;
        display(_mosaic);
        ViewPhoto.setEnabled(false);
    }//GEN-LAST:event_ViewPhotoActionPerformed

    private void ChangeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ChangeKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_ChangeKeyReleased

    private void LToleranceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LToleranceKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_LToleranceKeyReleased

    private void ToleranceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ToleranceKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_ToleranceKeyReleased

    private void ChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ChangeActionPerformed

    private void LocalityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LocalityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LocalityActionPerformed

    private void LocalityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LocalityKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_LocalityKeyReleased

    private void ToleranceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ToleranceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ToleranceActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IEv4UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IEv4UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IEv4UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IEv4UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new IEv4UI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider BDExplorer;
    private javax.swing.JTextField Change;
    private javax.swing.JScrollPane ContainerImage;
    private javax.swing.JTabbedPane ContainerSelected;
    private javax.swing.JCheckBox EuclideanDistance;
    private javax.swing.JSlider ExploreVideo;
    private javax.swing.JTextField GridX;
    private javax.swing.JTextField GridY;
    private javax.swing.JCheckBox HD;
    private javax.swing.JTextField Height;
    private static javax.swing.JLabel ImagePrint;
    private static javax.swing.JLabel ImageSelect;
    private javax.swing.JTextField LTolerance;
    private javax.swing.JLabel LabelChange;
    private javax.swing.JLabel LabelChange1;
    private javax.swing.JLabel LabelLTolerance;
    private javax.swing.JLabel LabelTolerance;
    private javax.swing.JButton LoadVideo;
    private javax.swing.JTextField Locality;
    public static javax.swing.JLabel Msg;
    private javax.swing.JCheckBox Pixel;
    private javax.swing.JButton SavePhotoMosaic;
    private javax.swing.JButton Select;
    private javax.swing.JButton ShowPhotoMosaic;
    private javax.swing.JTextField Tolerance;
    private javax.swing.JButton ViewPhoto;
    private javax.swing.JTextField Width;
    private javax.swing.JTabbedPane containerOptions;
    private javax.swing.JPanel explorerBD;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel selectFrame;
    // End of variables declaration//GEN-END:variables
}
